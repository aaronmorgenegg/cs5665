# Parsing a slippi file example

>>> from slippi import Game
>>> game = Game('test/replays/game.slp')
>>> game.metadata
Metadata(date=2018-06-22 07:52:59+00:00, duration=5086, platform=Platform.DOLPHIN, players=(Player(characters={InGameCharacter.MARTH: 5086}), Player(characters={InGameCharacter.FOX: 5086}), None, None))
>>> game.start
Start(is_teams=False, players=(Player(character=CSSCharacter.MARTH, costume=3, stocks=4, team=None, type=Type.HUMAN, ucf=UCF(dash_back=False, shield_drop=False)), Player(character=CSSCharacter.FOX, costume=0, stocks=4, team=None, type=Type.CPU, ucf=UCF(dash_back=False, shield_drop=False)), None, None), random_seed=3803194226, slippi=Slippi(version=1.0.0.0), stage=Stage.YOSHIS_STORY)
>>> game.end
End(method=Method.CONCLUSIVE)
>>> game.frames[0]
Frame(index=-123, ports=(Port(follower=None, leader=Data(post=Post(character=InGameCharacter.MARTH, combo_count=0, damage=0.00, direction=Direction.RIGHT, last_attack_landed=None, last_hit_by=None, position=(-31.94, 0.00), shield=59.66, state=ActionState.LANDING, state_age=7.00, stocks=4), pre=Pre(buttons=Buttons(logical=Logical.NONE, physical=Physical.NONE), cstick=(0.00, 0.00), direction=Direction.RIGHT, joystick=(0.00, 0.00), position=(-32.08, 0.00), random_seed=1373931959, state=ActionState.LANDING, triggers=Triggers(logical=0.00, physical=Physical(l=0.00, r=0.00))))), Port(follower=None, leader=Data(post=Post(character=InGameCharacter.FOX, combo_count=0, damage=0.00, direction=Direction.LEFT, last_attack_landed=None, last_hit_by=None, position=(9.96, 53.35), shield=60.00, state=ActionState.JUMP_F, state_age=19.00, stocks=4), pre=Pre(buttons=Buttons(logical=Logical.NONE, physical=Physical.NONE), cstick=(0.00, 0.00), direction=Direction.LEFT, joystick=(-0.99, 0.00), position=(10.78, 54.04), random_seed=1373931959, state=ActionState.JUMP_F, triggers=Triggers(logical=0.00, physical=Physical(l=0.00, r=0.00))))), None, None))

for frame in game.frames:
    data = frame.ports[0].leader # see also: port.follower (ICs)
    print(data.post.state) # character's post-frame action

# Next lets create a meta-frame log that breaks a series of frames into a series of discrete states
States:
    Neutral # Wait
    Downed # knocked down, freefalling, hitstun
    Dead # Dead or respawn
    Wavedash
    MovingGround # dashing, walking
    MovingAir # Jumping, falling
    AttackGround # ground attack
    AttackAir # aerial attack
    Shield # shielding
    Dodge # rolling, spot dodge, non-wavedash airdodge

# Lets define some stats I want to collect...
# For all of these, accumulate aggregates and per character matchup stats.

Combo: Starts on any hitstun, ends on kill or if defender is moveable on stage for X(45 or 60) frames, breaks if under Y(say 5-10) %.
    Combos per stock
    Combos per game
    Combo Avg percent

Edgeguard: Same as combo, but offstage and does not break.
    Edgeguards per stock
    Edgeguards per game
    Edgeguards num Success
    Edgeguards num Dropped
    Edgeguards ratio(success/total)

Poke: Damage(not necessarily hitstun) that is not sufficient percent to count as a combo


